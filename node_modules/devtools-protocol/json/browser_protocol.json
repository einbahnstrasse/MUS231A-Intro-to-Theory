{
    "version": {
        "major": "1",
        "minor": "3"
    },
    "domains": [
        {
            "domain": "Accessibility",
            "experimental": true,
            "dependencies": [
                "DOM"
            ],
            "types": [
                {
                    "id": "AXNodeId",
                    "description": "Unique accessibility node identifier.",
                    "type": "string"
                },
                {
                    "id": "AXValueType",
                    "description": "Enum of possible property types.",
                    "type": "string",
                    "enum": [
                        "boolean",
                        "tristate",
                        "booleanOrUndefined",
                        "idref",
                        "idrefList",
                        "integer",
                        "node",
                        "nodeList",
                        "number",
                        "string",
                        "computedString",
                        "token",
                        "tokenList",
                        "domRelation",
                        "role",
                        "internalRole",
                        "valueUndefined"
                    ]
                },
                {
                    "id": "AXValueSourceType",
                    "description": "Enum of possible property sources.",
                    "type": "string",
                    "enum": [
                        "attribute",
                        "implicit",
                        "style",
                        "contents",
                        "placeholder",
                        "relatedElement"
                    ]
                },
                {
                    "id": "AXValueNativeSourceType",
                    "description": "Enum of possible native property sources (as a subtype of a particular AXValueSourceType).",
                    "type": "string",
                    "enum": [
                        "description",
                        "figcaption",
                        "label",
                        "labelfor",
                        "labelwrapped",
                        "legend",
                        "rubyannotation",
                        "tablecaption",
                        "title",
                        "other"
                    ]
                },
                {
                    "id": "AXValueSource",
                    "description": "A single source for a computed AX property.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "type",
                            "description": "What type of source this is.",
                            "$ref": "AXValueSourceType"
                        },
                        {
                            "name": "value",
                            "description": "The value of this property source.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "attribute",
                            "description": "The name of the relevant attribute, if any.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "attributeValue",
                            "description": "The value of the relevant attribute, if any.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "superseded",
                            "description": "Whether this source is superseded by a higher priority source.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "nativeSource",
                            "description": "The native markup source for this value, e.g. a <label> element.",
                            "optional": true,
                            "$ref": "AXValueNativeSourceType"
                        },
                        {
                            "name": "nativeSourceValue",
                            "description": "The value, such as a node or node list, of the native source.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "invalid",
                            "description": "Whether the value for this property is invalid.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "invalidReason",
                            "description": "Reason for the value being invalid, if it is.",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AXRelatedNode",
                    "type": "object",
                    "properties": [
                        {
                            "name": "backendDOMNodeId",
                            "description": "The BackendNodeId of the related DOM node.",
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "idref",
                            "description": "The IDRef value provided, if any.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "text",
                            "description": "The text alternative of this node in the current context.",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AXProperty",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "The name of this property.",
                            "$ref": "AXPropertyName"
                        },
                        {
                            "name": "value",
                            "description": "The value of this property.",
                            "$ref": "AXValue"
                        }
                    ]
                },
                {
                    "id": "AXValue",
                    "description": "A single computed AX property.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "type",
                            "description": "The type of this value.",
                            "$ref": "AXValueType"
                        },
                        {
                            "name": "value",
                            "description": "The computed value of this property.",
                            "optional": true,
                            "type": "any"
                        },
                        {
                            "name": "relatedNodes",
                            "description": "One or more related nodes, if applicable.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXRelatedNode"
                            }
                        },
                        {
                            "name": "sources",
                            "description": "The sources which contributed to the computation of this property.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXValueSource"
                            }
                        }
                    ]
                },
                {
                    "id": "AXPropertyName",
                    "description": "Values of AXProperty name:\n- from 'busy' to 'roledescription': states which apply to every AX node\n- from 'live' to 'root': attributes which apply to nodes in live regions\n- from 'autocomplete' to 'valuetext': attributes which apply to widgets\n- from 'checked' to 'selected': states which apply to widgets\n- from 'activedescendant' to 'owns' - relationships between elements other than parent/child/sibling.",
                    "type": "string",
                    "enum": [
                        "busy",
                        "disabled",
                        "editable",
                        "focusable",
                        "focused",
                        "hidden",
                        "hiddenRoot",
                        "invalid",
                        "keyshortcuts",
                        "settable",
                        "roledescription",
                        "live",
                        "atomic",
                        "relevant",
                        "root",
                        "autocomplete",
                        "hasPopup",
                        "level",
                        "multiselectable",
                        "orientation",
                        "multiline",
                        "readonly",
                        "required",
                        "valuemin",
                        "valuemax",
                        "valuetext",
                        "checked",
                        "expanded",
                        "modal",
                        "pressed",
                        "selected",
                        "activedescendant",
                        "controls",
                        "describedby",
                        "details",
                        "errormessage",
                        "flowto",
                        "labelledby",
                        "owns"
                    ]
                },
                {
                    "id": "AXNode",
                    "description": "A node in the accessibility tree.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "nodeId",
                            "description": "Unique identifier for this node.",
                            "$ref": "AXNodeId"
                        },
                        {
                            "name": "ignored",
                            "description": "Whether this node is ignored for accessibility",
                            "type": "boolean"
                        },
                        {
                            "name": "ignoredReasons",
                            "description": "Collection of reasons why this node is hidden.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXProperty"
                            }
                        },
                        {
                            "name": "role",
                            "description": "This `Node`'s role, whether explicit or implicit.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "chromeRole",
                            "description": "This `Node`'s Chrome raw role.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "name",
                            "description": "The accessible name for this `Node`.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "description",
                            "description": "The accessible description for this `Node`.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "value",
                            "description": "The value for this `Node`.",
                            "optional": true,
                            "$ref": "AXValue"
                        },
                        {
                            "name": "properties",
                            "description": "All other properties",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXProperty"
                            }
                        },
                        {
                            "name": "parentId",
                            "description": "ID for this node's parent.",
                            "optional": true,
                            "$ref": "AXNodeId"
                        },
                        {
                            "name": "childIds",
                            "description": "IDs for each of this node's child nodes.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "AXNodeId"
                            }
                        },
                        {
                            "name": "backendDOMNodeId",
                            "description": "The backend ID for the associated DOM node, if any.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "frameId",
                            "description": "The frame ID for the frame associated with this nodes document.",
                            "optional": true,
                            "$ref": "Page.FrameId"
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "disable",
                    "description": "Disables the accessibility domain."
                },
                {
                    "name": "enable",
                    "description": "Enables the accessibility domain which causes `AXNodeId`s to remain consistent between method calls.\nThis turns on accessibility for the page, which can impact performance until accessibility is disabled."
                },
                {
                    "name": "getPartialAXTree",
                    "description": "Fetches the accessibility node and partial accessibility tree for this DOM node, if it exists.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "nodeId",
                            "description": "Identifier of the node to get the partial accessibility tree for.",
                            "optional": true,
                            "$ref": "DOM.NodeId"
                        },
                        {
                            "name": "backendNodeId",
                            "description": "Identifier of the backend node to get the partial accessibility tree for.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "objectId",
                            "description": "JavaScript object id of the node wrapper to get the partial accessibility tree for.",
                            "optional": true,
                            "$ref": "Runtime.RemoteObjectId"
                        },
                        {
                            "name": "fetchRelatives",
                            "description": "Whether to fetch this nodes ancestors, siblings and children. Defaults to true.",
                            "optional": true,
                            "type": "boolean"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "description": "The `Accessibility.AXNode` for this DOM node, if it exists, plus its ancestors, siblings and\nchildren, if requested.",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                },
                {
                    "name": "getFullAXTree",
                    "description": "Fetches the entire accessibility tree for the root Document",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "depth",
                            "description": "The maximum depth at which descendants of the root node should be retrieved.\nIf omitted, the full tree is returned.",
                            "optional": true,
                            "type": "integer"
                        },
                        {
                            "name": "frameId",
                            "description": "The frame for whose document the AX tree should be retrieved.\nIf omited, the root frame is used.",
                            "optional": true,
                            "$ref": "Page.FrameId"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                },
                {
                    "name": "getRootAXNode",
                    "description": "Fetches the root node.\nRequires `enable()` to have been called previously.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "frameId",
                            "description": "The frame in whose document the node resides.\nIf omitted, the root frame is used.",
                            "optional": true,
                            "$ref": "Page.FrameId"
                        }
                    ],
                    "returns": [
                        {
                            "name": "node",
                            "$ref": "AXNode"
                        }
                    ]
                },
                {
                    "name": "getAXNodeAndAncestors",
                    "description": "Fetches a node and all ancestors up to and including the root.\nRequires `enable()` to have been called previously.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "nodeId",
                            "description": "Identifier of the node to get.",
                            "optional": true,
                            "$ref": "DOM.NodeId"
                        },
                        {
                            "name": "backendNodeId",
                            "description": "Identifier of the backend node to get.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "objectId",
                            "description": "JavaScript object id of the node wrapper to get.",
                            "optional": true,
                            "$ref": "Runtime.RemoteObjectId"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                },
                {
                    "name": "getChildAXNodes",
                    "description": "Fetches a particular accessibility node by AXNodeId.\nRequires `enable()` to have been called previously.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "id",
                            "$ref": "AXNodeId"
                        },
                        {
                            "name": "frameId",
                            "description": "The frame in whose document the node resides.\nIf omitted, the root frame is used.",
                            "optional": true,
                            "$ref": "Page.FrameId"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                },
                {
                    "name": "queryAXTree",
                    "description": "Query a DOM node's accessibility subtree for accessible name and role.\nThis command computes the name and role for all nodes in the subtree, including those that are\nignored for accessibility, and returns those that mactch the specified name and role. If no DOM\nnode is specified, or the DOM node does not exist, the command returns an error. If neither\n`accessibleName` or `role` is specified, it returns all the accessibility nodes in the subtree.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "nodeId",
                            "description": "Identifier of the node for the root to query.",
                            "optional": true,
                            "$ref": "DOM.NodeId"
                        },
                        {
                            "name": "backendNodeId",
                            "description": "Identifier of the backend node for the root to query.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "objectId",
                            "description": "JavaScript object id of the node wrapper for the root to query.",
                            "optional": true,
                            "$ref": "Runtime.RemoteObjectId"
                        },
                        {
                            "name": "accessibleName",
                            "description": "Find nodes with this computed name.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "role",
                            "description": "Find nodes with this computed role.",
                            "optional": true,
                            "type": "string"
                        }
                    ],
                    "returns": [
                        {
                            "name": "nodes",
                            "description": "A list of `Accessibility.AXNode` matching the specified attributes,\nincluding nodes that are ignored for accessibility.",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                }
            ],
            "events": [
                {
                    "name": "loadComplete",
                    "description": "The loadComplete event mirrors the load complete event sent by the browser to assistive\ntechnology when the web page has finished loading.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "root",
                            "description": "New document root node.",
                            "$ref": "AXNode"
                        }
                    ]
                },
                {
                    "name": "nodesUpdated",
                    "description": "The nodesUpdated event is sent every time a previously requested node has changed the in tree.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "nodes",
                            "description": "Updated node data.",
                            "type": "array",
                            "items": {
                                "$ref": "AXNode"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "domain": "Animation",
            "experimental": true,
            "dependencies": [
                "Runtime",
                "DOM"
            ],
            "types": [
                {
                    "id": "Animation",
                    "description": "Animation instance.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "id",
                            "description": "`Animation`'s id.",
                            "type": "string"
                        },
                        {
                            "name": "name",
                            "description": "`Animation`'s name.",
                            "type": "string"
                        },
                        {
                            "name": "pausedState",
                            "description": "`Animation`'s internal paused state.",
                            "type": "boolean"
                        },
                        {
                            "name": "playState",
                            "description": "`Animation`'s play state.",
                            "type": "string"
                        },
                        {
                            "name": "playbackRate",
                            "description": "`Animation`'s playback rate.",
                            "type": "number"
                        },
                        {
                            "name": "startTime",
                            "description": "`Animation`'s start time.",
                            "type": "number"
                        },
                        {
                            "name": "currentTime",
                            "description": "`Animation`'s current time.",
                            "type": "number"
                        },
                        {
                            "name": "type",
                            "description": "Animation type of `Animation`.",
                            "type": "string",
                            "enum": [
                                "CSSTransition",
                                "CSSAnimation",
                                "WebAnimation"
                            ]
                        },
                        {
                            "name": "source",
                            "description": "`Animation`'s source animation node.",
                            "optional": true,
                            "$ref": "AnimationEffect"
                        },
                        {
                            "name": "cssId",
                            "description": "A unique ID for `Animation` representing the sources that triggered this CSS\nanimation/transition.",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AnimationEffect",
                    "description": "AnimationEffect instance",
                    "type": "object",
                    "properties": [
                        {
                            "name": "delay",
                            "description": "`AnimationEffect`'s delay.",
                            "type": "number"
                        },
                        {
                            "name": "endDelay",
                            "description": "`AnimationEffect`'s end delay.",
                            "type": "number"
                        },
                        {
                            "name": "iterationStart",
                            "description": "`AnimationEffect`'s iteration start.",
                            "type": "number"
                        },
                        {
                            "name": "iterations",
                            "description": "`AnimationEffect`'s iterations.",
                            "type": "number"
                        },
                        {
                            "name": "duration",
                            "description": "`AnimationEffect`'s iteration duration.",
                            "type": "number"
                        },
                        {
                            "name": "direction",
                            "description": "`AnimationEffect`'s playback direction.",
                            "type": "string"
                        },
                        {
                            "name": "fill",
                            "description": "`AnimationEffect`'s fill mode.",
                            "type": "string"
                        },
                        {
                            "name": "backendNodeId",
                            "description": "`AnimationEffect`'s target node.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "keyframesRule",
                            "description": "`AnimationEffect`'s keyframes.",
                            "optional": true,
                            "$ref": "KeyframesRule"
                        },
                        {
                            "name": "easing",
                            "description": "`AnimationEffect`'s timing function.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "KeyframesRule",
                    "description": "Keyframes Rule",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "CSS keyframed animation's name.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "keyframes",
                            "description": "List of animation keyframes.",
                            "type": "array",
                            "items": {
                                "$ref": "KeyframeStyle"
                            }
                        }
                    ]
                },
                {
                    "id": "KeyframeStyle",
                    "description": "Keyframe Style",
                    "type": "object",
                    "properties": [
                        {
                            "name": "offset",
                            "description": "Keyframe's time offset.",
                            "type": "string"
                        },
                        {
                            "name": "easing",
                            "description": "`AnimationEffect`'s timing function.",
                            "type": "string"
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "disable",
                    "description": "Disables animation domain notifications."
                },
                {
                    "name": "enable",
                    "description": "Enables animation domain notifications."
                },
                {
                    "name": "getCurrentTime",
                    "description": "Returns the current time of the an animation.",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of animation.",
                            "type": "string"
                        }
                    ],
                    "returns": [
                        {
                            "name": "currentTime",
                            "description": "Current time of the page.",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "getPlaybackRate",
                    "description": "Gets the playback rate of the document timeline.",
                    "returns": [
                        {
                            "name": "playbackRate",
                            "description": "Playback rate for animations on page.",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "releaseAnimations",
                    "description": "Releases a set of animations to no longer be manipulated.",
                    "parameters": [
                        {
                            "name": "animations",
                            "description": "List of animation ids to seek.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ]
                },
                {
                    "name": "resolveAnimation",
                    "description": "Gets the remote object of the Animation.",
                    "parameters": [
                        {
                            "name": "animationId",
                            "description": "Animation id.",
                            "type": "string"
                        }
                    ],
                    "returns": [
                        {
                            "name": "remoteObject",
                            "description": "Corresponding remote object.",
                            "$ref": "Runtime.RemoteObject"
                        }
                    ]
                },
                {
                    "name": "seekAnimations",
                    "description": "Seek a set of animations to a particular time within each animation.",
                    "parameters": [
                        {
                            "name": "animations",
                            "description": "List of animation ids to seek.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "currentTime",
                            "description": "Set the current time of each animation.",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "setPaused",
                    "description": "Sets the paused state of a set of animations.",
                    "parameters": [
                        {
                            "name": "animations",
                            "description": "Animations to set the pause state of.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "paused",
                            "description": "Paused state to set to.",
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "name": "setPlaybackRate",
                    "description": "Sets the playback rate of the document timeline.",
                    "parameters": [
                        {
                            "name": "playbackRate",
                            "description": "Playback rate for animations on page",
                            "type": "number"
                        }
                    ]
                },
                {
                    "name": "setTiming",
                    "description": "Sets the timing of an animation node.",
                    "parameters": [
                        {
                            "name": "animationId",
                            "description": "Animation id.",
                            "type": "string"
                        },
                        {
                            "name": "duration",
                            "description": "Duration of the animation.",
                            "type": "number"
                        },
                        {
                            "name": "delay",
                            "description": "Delay of the animation.",
                            "type": "number"
                        }
                    ]
                }
            ],
            "events": [
                {
                    "name": "animationCanceled",
                    "description": "Event for when an animation has been cancelled.",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of the animation that was cancelled.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "animationCreated",
                    "description": "Event for each animation that has been created.",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Id of the animation that was created.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "animationStarted",
                    "description": "Event for animation that has been started.",
                    "parameters": [
                        {
                            "name": "animation",
                            "description": "Animation that was started.",
                            "$ref": "Animation"
                        }
                    ]
                }
            ]
        },
        {
            "domain": "Audits",
            "description": "Audits domain allows investigation of page violations and possible improvements.",
            "experimental": true,
            "dependencies": [
                "Network"
            ],
            "types": [
                {
                    "id": "AffectedCookie",
                    "description": "Information about a cookie that is affected by an inspector issue.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "The following three properties uniquely identify a cookie",
                            "type": "string"
                        },
                        {
                            "name": "path",
                            "type": "string"
                        },
                        {
                            "name": "domain",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AffectedRequest",
                    "description": "Information about a request that is affected by an inspector issue.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "requestId",
                            "description": "The unique request id.",
                            "$ref": "Network.RequestId"
                        },
                        {
                            "name": "url",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "AffectedFrame",
                    "description": "Information about the frame affected by an inspector issue.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "frameId",
                            "$ref": "Page.FrameId"
                        }
                    ]
                },
                {
                    "id": "CookieExclusionReason",
                    "type": "string",
                    "enum": [
                        "ExcludeSameSiteUnspecifiedTreatedAsLax",
                        "ExcludeSameSiteNoneInsecure",
                        "ExcludeSameSiteLax",
                        "ExcludeSameSiteStrict",
                        "ExcludeInvalidSameParty",
                        "ExcludeSamePartyCrossPartyContext",
                        "ExcludeDomainNonASCII"
                    ]
                },
                {
                    "id": "CookieWarningReason",
                    "type": "string",
                    "enum": [
                        "WarnSameSiteUnspecifiedCrossSiteContext",
                        "WarnSameSiteNoneInsecure",
                        "WarnSameSiteUnspecifiedLaxAllowUnsafe",
                        "WarnSameSiteStrictLaxDowngradeStrict",
                        "WarnSameSiteStrictCrossDowngradeStrict",
                        "WarnSameSiteStrictCrossDowngradeLax",
                        "WarnSameSiteLaxCrossDowngradeStrict",
                        "WarnSameSiteLaxCrossDowngradeLax",
                        "WarnAttributeValueExceedsMaxSize",
                        "WarnDomainNonASCII"
                    ]
                },
                {
                    "id": "CookieOperation",
                    "type": "string",
                    "enum": [
                        "SetCookie",
                        "ReadCookie"
                    ]
                },
                {
                    "id": "CookieIssueDetails",
                    "description": "This information is currently necessary, as the front-end has a difficult\ntime finding a specific cookie. With this, we can convey specific error\ninformation without the cookie.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "cookie",
                            "description": "If AffectedCookie is not set then rawCookieLine contains the raw\nSet-Cookie header string. This hints at a problem where the\ncookie line is syntactically or semantically malformed in a way\nthat no valid cookie could be created.",
                            "optional": true,
                            "$ref": "AffectedCookie"
                        },
                        {
                            "name": "rawCookieLine",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "cookieWarningReasons",
                            "type": "array",
                            "items": {
                                "$ref": "CookieWarningReason"
                            }
                        },
                        {
                            "name": "cookieExclusionReasons",
                            "type": "array",
                            "items": {
                                "$ref": "CookieExclusionReason"
                            }
                        },
                        {
                            "name": "operation",
                            "description": "Optionally identifies the site-for-cookies and the cookie url, which\nmay be used by the front-end as additional context.",
                            "$ref": "CookieOperation"
                        },
                        {
                            "name": "siteForCookies",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "cookieUrl",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "request",
                            "optional": true,
                            "$ref": "AffectedRequest"
                        }
                    ]
                },
                {
                    "id": "MixedContentResolutionStatus",
                    "type": "string",
                    "enum": [
                        "MixedContentBlocked",
                        "MixedContentAutomaticallyUpgraded",
                        "MixedContentWarning"
                    ]
                },
                {
                    "id": "MixedContentResourceType",
                    "type": "string",
                    "enum": [
                        "AttributionSrc",
                        "Audio",
                        "Beacon",
                        "CSPReport",
                        "Download",
                        "EventSource",
                        "Favicon",
                        "Font",
                        "Form",
                        "Frame",
                        "Image",
                        "Import",
                        "Manifest",
                        "Ping",
                        "PluginData",
                        "PluginResource",
                        "Prefetch",
                        "Resource",
                        "Script",
                        "ServiceWorker",
                        "SharedWorker",
                        "Stylesheet",
                        "Track",
                        "Video",
                        "Worker",
                        "XMLHttpRequest",
                        "XSLT"
                    ]
                },
                {
                    "id": "MixedContentIssueDetails",
                    "type": "object",
                    "properties": [
                        {
                            "name": "resourceType",
                            "description": "The type of resource causing the mixed content issue (css, js, iframe,\nform,...). Marked as optional because it is mapped to from\nblink::mojom::RequestContextType, which will be replaced\nby network::mojom::RequestDestination",
                            "optional": true,
                            "$ref": "MixedContentResourceType"
                        },
                        {
                            "name": "resolutionStatus",
                            "description": "The way the mixed content issue is being resolved.",
                            "$ref": "MixedContentResolutionStatus"
                        },
                        {
                            "name": "insecureURL",
                            "description": "The unsafe http url causing the mixed content issue.",
                            "type": "string"
                        },
                        {
                            "name": "mainResourceURL",
                            "description": "The url responsible for the call to an unsafe url.",
                            "type": "string"
                        },
                        {
                            "name": "request",
                            "description": "The mixed content request.\nDoes not always exist (e.g. for unsafe form submission urls).",
                            "optional": true,
                            "$ref": "AffectedRequest"
                        },
                        {
                            "name": "frame",
                            "description": "Optional because not every mixed content issue is necessarily linked to a frame.",
                            "optional": true,
                            "$ref": "AffectedFrame"
                        }
                    ]
                },
                {
                    "id": "BlockedByResponseReason",
                    "description": "Enum indicating the reason a response has been blocked. These reasons are\nrefinements of the net error BLOCKED_BY_RESPONSE.",
                    "type": "string",
                    "enum": [
                        "CoepFrameResourceNeedsCoepHeader",
                        "CoopSandboxedIFrameCannotNavigateToCoopPage",
                        "CorpNotSameOrigin",
                        "CorpNotSameOriginAfterDefaultedToSameOriginByCoep",
                        "CorpNotSameSite"
                    ]
                },
                {
                    "id": "BlockedByResponseIssueDetails",
                    "description": "Details for a request that has been blocked with the BLOCKED_BY_RESPONSE\ncode. Currently only used for COEP/COOP, but may be extended to include\nsome CSP errors in the future.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "request",
                            "$ref": "AffectedRequest"
                        },
                        {
                            "name": "parentFrame",
                            "optional": true,
                            "$ref": "AffectedFrame"
                        },
                        {
                            "name": "blockedFrame",
                            "optional": true,
                            "$ref": "AffectedFrame"
                        },
                        {
                            "name": "reason",
                            "$ref": "BlockedByResponseReason"
                        }
                    ]
                },
                {
                    "id": "HeavyAdResolutionStatus",
                    "type": "string",
                    "enum": [
                        "HeavyAdBlocked",
                        "HeavyAdWarning"
                    ]
                },
                {
                    "id": "HeavyAdReason",
                    "type": "string",
                    "enum": [
                        "NetworkTotalLimit",
                        "CpuTotalLimit",
                        "CpuPeakLimit"
                    ]
                },
                {
                    "id": "HeavyAdIssueDetails",
                    "type": "object",
                    "properties": [
                        {
                            "name": "resolution",
                            "description": "The resolution status, either blocking the content or warning.",
                            "$ref": "HeavyAdResolutionStatus"
                        },
                        {
                            "name": "reason",
                            "description": "The reason the ad was blocked, total network or cpu or peak cpu.",
                            "$ref": "HeavyAdReason"
                        },
                        {
                            "name": "frame",
                            "description": "The frame that was blocked.",
                            "$ref": "AffectedFrame"
                        }
                    ]
                },
                {
                    "id": "ContentSecurityPolicyViolationType",
                    "type": "string",
                    "enum": [
                        "kInlineViolation",
                        "kEvalViolation",
                        "kURLViolation",
                        "kTrustedTypesSinkViolation",
                        "kTrustedTypesPolicyViolation",
                        "kWasmEvalViolation"
                    ]
                },
                {
                    "id": "SourceCodeLocation",
                    "type": "object",
                    "properties": [
                        {
                            "name": "scriptId",
                            "optional": true,
                            "$ref": "Runtime.ScriptId"
                        },
                        {
                            "name": "url",
                            "type": "string"
                        },
                        {
                            "name": "lineNumber",
                            "type": "integer"
                        },
                        {
                            "name": "columnNumber",
                            "type": "integer"
                        }
                    ]
                },
                {
                    "id": "ContentSecurityPolicyIssueDetails",
                    "type": "object",
                    "properties": [
                        {
                            "name": "blockedURL",
                            "description": "The url not included in allowed sources.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "violatedDirective",
                            "description": "Specific directive that is violated, causing the CSP issue.",
                            "type": "string"
                        },
                        {
                            "name": "isReportOnly",
                            "type": "boolean"
                        },
                        {
                            "name": "contentSecurityPolicyViolationType",
                            "$ref": "ContentSecurityPolicyViolationType"
                        },
                        {
                            "name": "frameAncestor",
                            "optional": true,
                            "$ref": "AffectedFrame"
                        },
                        {
                            "name": "sourceCodeLocation",
                            "optional": true,
                            "$ref": "SourceCodeLocation"
                        },
                        {
                            "name": "violatingNodeId",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        }
                    ]
                },
                {
                    "id": "SharedArrayBufferIssueType",
                    "type": "string",
                    "enum": [
                        "TransferIssue",
                        "CreationIssue"
                    ]
                },
                {
                    "id": "SharedArrayBufferIssueDetails",
                    "description": "Details for a issue arising from an SAB being instantiated in, or\ntransferred to a context that is not cross-origin isolated.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "sourceCodeLocation",
                            "$ref": "SourceCodeLocation"
                        },
                        {
                            "name": "isWarning",
                            "type": "boolean"
                        },
                        {
                            "name": "type",
                            "$ref": "SharedArrayBufferIssueType"
                        }
                    ]
                },
                {
                    "id": "TwaQualityEnforcementViolationType",
                    "type": "string",
                    "enum": [
                        "kHttpError",
                        "kUnavailableOffline",
                        "kDigitalAssetLinks"
                    ]
                },
                {
                    "id": "TrustedWebActivityIssueDetails",
                    "type": "object",
                    "properties": [
                        {
                            "name": "url",
                            "description": "The url that triggers the violation.",
                            "type": "string"
                        },
                        {
                            "name": "violationType",
                            "$ref": "TwaQualityEnforcementViolationType"
                        },
                        {
                            "name": "httpStatusCode",
                            "optional": true,
                            "type": "integer"
                        },
                        {
                            "name": "packageName",
                            "description": "The package name of the Trusted Web Activity client app. This field is\nonly used when violation type is kDigitalAssetLinks.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "signature",
                            "description": "The signature of the Trusted Web Activity client app. This field is only\nused when violation type is kDigitalAssetLinks.",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "LowTextContrastIssueDetails",
                    "type": "object",
                    "properties": [
                        {
                            "name": "violatingNodeId",
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "violatingNodeSelector",
                            "type": "string"
                        },
                        {
                            "name": "contrastRatio",
                            "type": "number"
                        },
                        {
                            "name": "thresholdAA",
                            "type": "number"
                        },
                        {
                            "name": "thresholdAAA",
                            "type": "number"
                        },
                        {
                            "name": "fontSize",
                            "type": "string"
                        },
                        {
                            "name": "fontWeight",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "CorsIssueDetails",
                    "description": "Details for a CORS related issue, e.g. a warning or error related to\nCORS RFC1918 enforcement.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "corsErrorStatus",
                            "$ref": "Network.CorsErrorStatus"
                        },
                        {
                            "name": "isWarning",
                            "type": "boolean"
                        },
                        {
                            "name": "request",
                            "$ref": "AffectedRequest"
                        },
                        {
                            "name": "location",
                            "optional": true,
                            "$ref": "SourceCodeLocation"
                        },
                        {
                            "name": "initiatorOrigin",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "resourceIPAddressSpace",
                            "optional": true,
                            "$ref": "Network.IPAddressSpace"
                        },
                        {
                            "name": "clientSecurityState",
                            "optional": true,
                            "$ref": "Network.ClientSecurityState"
                        }
                    ]
                },
                {
                    "id": "AttributionReportingIssueType",
                    "type": "string",
                    "enum": [
                        "PermissionPolicyDisabled",
                        "PermissionPolicyNotDelegated",
                        "UntrustworthyReportingOrigin",
                        "InsecureContext",
                        "InvalidHeader",
                        "InvalidRegisterTriggerHeader",
                        "InvalidEligibleHeader",
                        "TooManyConcurrentRequests",
                        "SourceAndTriggerHeaders",
                        "SourceIgnored",
                        "TriggerIgnored"
                    ]
                },
                {
                    "id": "AttributionReportingIssueDetails",
                    "description": "Details for issues around \"Attribution Reporting API\" usage.\nExplainer: https://github.com/WICG/attribution-reporting-api",
                    "type": "object",
                    "properties": [
                        {
                            "name": "violationType",
                            "$ref": "AttributionReportingIssueType"
                        },
                        {
                            "name": "request",
                            "optional": true,
                            "$ref": "AffectedRequest"
                        },
                        {
                            "name": "violatingNodeId",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "invalidParameter",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "QuirksModeIssueDetails",
                    "description": "Details for issues about documents in Quirks Mode\nor Limited Quirks Mode that affects page layouting.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "isLimitedQuirksMode",
                            "description": "If false, it means the document's mode is \"quirks\"\ninstead of \"limited-quirks\".",
                            "type": "boolean"
                        },
                        {
                            "name": "documentNodeId",
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "url",
                            "type": "string"
                        },
                        {
                            "name": "frameId",
                            "$ref": "Page.FrameId"
                        },
                        {
                            "name": "loaderId",
                            "$ref": "Network.LoaderId"
                        }
                    ]
                },
                {
                    "id": "NavigatorUserAgentIssueDetails",
                    "type": "object",
                    "properties": [
                        {
                            "name": "url",
                            "type": "string"
                        },
                        {
                            "name": "location",
                            "optional": true,
                            "$ref": "SourceCodeLocation"
                        }
                    ]
                },
                {
                    "id": "GenericIssueErrorType",
                    "type": "string",
                    "enum": [
                        "CrossOriginPortalPostMessageError"
                    ]
                },
                {
                    "id": "GenericIssueDetails",
                    "description": "Depending on the concrete errorType, different properties are set.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "errorType",
                            "description": "Issues with the same errorType are aggregated in the frontend.",
                            "$ref": "GenericIssueErrorType"
                        },
                        {
                            "name": "frameId",
                            "optional": true,
                            "$ref": "Page.FrameId"
                        }
                    ]
                },
                {
                    "id": "DeprecationIssueType",
                    "type": "string",
                    "enum": [
                        "AuthorizationCoveredByWildcard",
                        "CanRequestURLHTTPContainingNewline",
                        "ChromeLoadTimesConnectionInfo",
                        "ChromeLoadTimesFirstPaintAfterLoadTime",
                        "ChromeLoadTimesWasAlternateProtocolAvailable",
                        "CookieWithTruncatingChar",
                        "CrossOriginAccessBasedOnDocumentDomain",
                        "CrossOriginWindowAlert",
                        "CrossOriginWindowConfirm",
                        "CSSSelectorInternalMediaControlsOverlayCastButton",
                        "DeprecationExample",
                        "DocumentDomainSettingWithoutOriginAgentClusterHeader",
                        "EventPath",
                        "ExpectCTHeader",
                        "GeolocationInsecureOrigin",
                        "GeolocationInsecureOriginDeprecatedNotRemoved",
                        "GetUserMediaInsecureOrigin",
                        "HostCandidateAttributeGetter",
                        "IdentityInCanMakePaymentEvent",
                        "InsecurePrivateNetworkSubresourceRequest",
                        "LocalCSSFileExtensionRejected",
                        "MediaSourceAbortRemove",
                        "MediaSourceDurationTruncatingBuffered",
                        "NoSysexWebMIDIWithoutPermission",
                        "NotificationInsecureOrigin",
                        "NotificationPermissionRequestedIframe",
                        "ObsoleteWebRtcCipherSuite",
                        "OpenWebDatabaseInsecureContext",
                        "OverflowVisibleOnReplacedElement",
                        "PaymentInstruments",
                        "PaymentRequestCSPViolation",
                        "PersistentQuotaType",
                        "PictureSourceSrc",
                        "PrefixedCancelAnimationFrame",
                        "PrefixedRequestAnimationFrame",
                        "PrefixedStorageInfo",
                        "PrefixedVideoDisplayingFullscreen",
                        "PrefixedVideoEnterFullscreen",
                        "PrefixedVideoEnterFullScreen",
                        "PrefixedVideoExitFullscreen",
                        "PrefixedVideoExitFullScreen",
                        "PrefixedVideoSupportsFullscreen",
                        "RangeExpand",
                        "RequestedSubresourceWithEmbeddedCredentials",
                        "RTCConstraintEnableDtlsSrtpFalse",
                        "RTCConstraintEnableDtlsSrtpTrue",
                        "RTCPeerConnectionComplexPlanBSdpUsingDefaultSdpSemantics",
                        "RTCPeerConnectionSdpSemanticsPlanB",
                        "RtcpMuxPolicyNegotiate",
                        "SharedArrayBufferConstructedWithoutIsolation",
                        "TextToSpeech_DisallowedByAutoplay",
                        "V8SharedArrayBufferConstructedInExtensionWithoutIsolation",
                        "XHRJSONEncodingDetection",
                        "XMLHttpRequestSynchronousInNonWorkerOutsideBeforeUnload",
                        "XRSupportsSession"
                    ]
                },
                {
                    "id": "DeprecationIssueDetails",
                    "description": "This issue tracks information needed to print a deprecation message.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/third_party/blink/renderer/core/frame/deprecation/README.md",
                    "type": "object",
                    "properties": [
                        {
                            "name": "affectedFrame",
                            "optional": true,
                            "$ref": "AffectedFrame"
                        },
                        {
                            "name": "sourceCodeLocation",
                            "$ref": "SourceCodeLocation"
                        },
                        {
                            "name": "type",
                            "$ref": "DeprecationIssueType"
                        }
                    ]
                },
                {
                    "id": "ClientHintIssueReason",
                    "type": "string",
                    "enum": [
                        "MetaTagAllowListInvalidOrigin",
                        "MetaTagModifiedHTML"
                    ]
                },
                {
                    "id": "FederatedAuthRequestIssueDetails",
                    "type": "object",
                    "properties": [
                        {
                            "name": "federatedAuthRequestIssueReason",
                            "$ref": "FederatedAuthRequestIssueReason"
                        }
                    ]
                },
                {
                    "id": "FederatedAuthRequestIssueReason",
                    "description": "Represents the failure reason when a federated authentication reason fails.\nShould be updated alongside RequestIdTokenStatus in\nthird_party/blink/public/mojom/devtools/inspector_issue.mojom to include\nall cases except for success.",
                    "type": "string",
                    "enum": [
                        "ShouldEmbargo",
                        "TooManyRequests",
                        "ManifestListHttpNotFound",
                        "ManifestListNoResponse",
                        "ManifestListInvalidResponse",
                        "ManifestNotInManifestList",
                        "ManifestListTooBig",
                        "ManifestHttpNotFound",
                        "ManifestNoResponse",
                        "ManifestInvalidResponse",
                        "ClientMetadataHttpNotFound",
                        "ClientMetadataNoResponse",
                        "ClientMetadataInvalidResponse",
                        "DisabledInSettings",
                        "ErrorFetchingSignin",
                        "InvalidSigninResponse",
                        "AccountsHttpNotFound",
                        "AccountsNoResponse",
                        "AccountsInvalidResponse",
                        "IdTokenHttpNotFound",
                        "IdTokenNoResponse",
                        "IdTokenInvalidResponse",
                        "IdTokenInvalidRequest",
                        "ErrorIdToken",
                        "Canceled",
                        "RpPageNotVisible"
                    ]
                },
                {
                    "id": "ClientHintIssueDetails",
                    "description": "This issue tracks client hints related issues. It's used to deprecate old\nfeatures, encourage the use of new ones, and provide general guidance.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "sourceCodeLocation",
                            "$ref": "SourceCodeLocation"
                        },
                        {
                            "name": "clientHintIssueReason",
                            "$ref": "ClientHintIssueReason"
                        }
                    ]
                },
                {
                    "id": "InspectorIssueCode",
                    "description": "A unique identifier for the type of issue. Each type may use one of the\noptional fields in InspectorIssueDetails to convey more specific\ninformation about the kind of issue.",
                    "type": "string",
                    "enum": [
                        "CookieIssue",
                        "MixedContentIssue",
                        "BlockedByResponseIssue",
                        "HeavyAdIssue",
                        "ContentSecurityPolicyIssue",
                        "SharedArrayBufferIssue",
                        "TrustedWebActivityIssue",
                        "LowTextContrastIssue",
                        "CorsIssue",
                        "AttributionReportingIssue",
                        "QuirksModeIssue",
                        "NavigatorUserAgentIssue",
                        "GenericIssue",
                        "DeprecationIssue",
                        "ClientHintIssue",
                        "FederatedAuthRequestIssue"
                    ]
                },
                {
                    "id": "InspectorIssueDetails",
                    "description": "This struct holds a list of optional fields with additional information\nspecific to the kind of issue. When adding a new issue code, please also\nadd a new optional field to this type.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "cookieIssueDetails",
                            "optional": true,
                            "$ref": "CookieIssueDetails"
                        },
                        {
                            "name": "mixedContentIssueDetails",
                            "optional": true,
                            "$ref": "MixedContentIssueDetails"
                        },
                        {
                            "name": "blockedByResponseIssueDetails",
                            "optional": true,
                            "$ref": "BlockedByResponseIssueDetails"
                        },
                        {
                            "name": "heavyAdIssueDetails",
                            "optional": true,
                            "$ref": "HeavyAdIssueDetails"
                        },
                        {
                            "name": "contentSecurityPolicyIssueDetails",
                            "optional": true,
                            "$ref": "ContentSecurityPolicyIssueDetails"
                        },
                        {
                            "name": "sharedArrayBufferIssueDetails",
                            "optional": true,
                            "$ref": "SharedArrayBufferIssueDetails"
                        },
                        {
                            "name": "twaQualityEnforcementDetails",
                            "optional": true,
                            "$ref": "TrustedWebActivityIssueDetails"
                        },
                        {
                            "name": "lowTextContrastIssueDetails",
                            "optional": true,
                            "$ref": "LowTextContrastIssueDetails"
                        },
                        {
                            "name": "corsIssueDetails",
                            "optional": true,
                            "$ref": "CorsIssueDetails"
                        },
                        {
                            "name": "attributionReportingIssueDetails",
                            "optional": true,
                            "$ref": "AttributionReportingIssueDetails"
                        },
                        {
                            "name": "quirksModeIssueDetails",
                            "optional": true,
                            "$ref": "QuirksModeIssueDetails"
                        },
                        {
                            "name": "navigatorUserAgentIssueDetails",
                            "optional": true,
                            "$ref": "NavigatorUserAgentIssueDetails"
                        },
                        {
                            "name": "genericIssueDetails",
                            "optional": true,
                            "$ref": "GenericIssueDetails"
                        },
                        {
                            "name": "deprecationIssueDetails",
                            "optional": true,
                            "$ref": "DeprecationIssueDetails"
                        },
                        {
                            "name": "clientHintIssueDetails",
                            "optional": true,
                            "$ref": "ClientHintIssueDetails"
                        },
                        {
                            "name": "federatedAuthRequestIssueDetails",
                            "optional": true,
                            "$ref": "FederatedAuthRequestIssueDetails"
                        }
                    ]
                },
                {
                    "id": "IssueId",
                    "description": "A unique id for a DevTools inspector issue. Allows other entities (e.g.\nexceptions, CDP message, console messages, etc.) to reference an issue.",
                    "type": "string"
                },
                {
                    "id": "InspectorIssue",
                    "description": "An inspector issue reported from the back-end.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "code",
                            "$ref": "InspectorIssueCode"
                        },
                        {
                            "name": "details",
                            "$ref": "InspectorIssueDetails"
                        },
                        {
                            "name": "issueId",
                            "description": "A unique id for this issue. May be omitted if no other entity (e.g.\nexception, CDP message, etc.) is referencing this issue.",
                            "optional": true,
                            "$ref": "IssueId"
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "getEncodedResponse",
                    "description": "Returns the response body and size if it were re-encoded with the specified settings. Only\napplies to images.",
                    "parameters": [
                        {
                            "name": "requestId",
                            "description": "Identifier of the network request to get content for.",
                            "$ref": "Network.RequestId"
                        },
                        {
                            "name": "encoding",
                            "description": "The encoding to use.",
                            "type": "string",
                            "enum": [
                                "webp",
                                "jpeg",
                                "png"
                            ]
                        },
                        {
                            "name": "quality",
                            "description": "The quality of the encoding (0-1). (defaults to 1)",
                            "optional": true,
                            "type": "number"
                        },
                        {
                            "name": "sizeOnly",
                            "description": "Whether to only return the size information (defaults to false).",
                            "optional": true,
                            "type": "boolean"
                        }
                    ],
                    "returns": [
                        {
                            "name": "body",
                            "description": "The encoded body as a base64 string. Omitted if sizeOnly is true. (Encoded as a base64 string when passed over JSON)",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "originalSize",
                            "description": "Size before re-encoding.",
                            "type": "integer"
                        },
                        {
                            "name": "encodedSize",
                            "description": "Size after re-encoding.",
                            "type": "integer"
                        }
                    ]
                },
                {
                    "name": "disable",
                    "description": "Disables issues domain, prevents further issues from being reported to the client."
                },
                {
                    "name": "enable",
                    "description": "Enables issues domain, sends the issues collected so far to the client by means of the\n`issueAdded` event."
                },
                {
                    "name": "checkContrast",
                    "description": "Runs the contrast check for the target page. Found issues are reported\nusing Audits.issueAdded event.",
                    "parameters": [
                        {
                            "name": "reportAAA",
                            "description": "Whether to report WCAG AAA level issues. Default is false.",
                            "optional": true,
                            "type": "boolean"
                        }
                    ]
                }
            ],
            "events": [
                {
                    "name": "issueAdded",
                    "parameters": [
                        {
                            "name": "issue",
                            "$ref": "InspectorIssue"
                        }
                    ]
                }
            ]
        },
        {
            "domain": "BackgroundService",
            "description": "Defines events for background web platform features.",
            "experimental": true,
            "types": [
                {
                    "id": "ServiceName",
                    "description": "The Background Service that will be associated with the commands/events.\nEvery Background Service operates independently, but they share the same\nAPI.",
                    "type": "string",
                    "enum": [
                        "backgroundFetch",
                        "backgroundSync",
                        "pushMessaging",
                        "notifications",
                        "paymentHandler",
                        "periodicBackgroundSync"
                    ]
                },
                {
                    "id": "EventMetadata",
                    "description": "A key-value pair for additional event information to pass along.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "BackgroundServiceEvent",
                    "type": "object",
                    "properties": [
                        {
                            "name": "timestamp",
                            "description": "Timestamp of the event (in seconds).",
                            "$ref": "Network.TimeSinceEpoch"
                        },
                        {
                            "name": "origin",
                            "description": "The origin this event belongs to.",
                            "type": "string"
                        },
                        {
                            "name": "serviceWorkerRegistrationId",
                            "description": "The Service Worker ID that initiated the event.",
                            "$ref": "ServiceWorker.RegistrationID"
                        },
                        {
                            "name": "service",
                            "description": "The Background Service this event belongs to.",
                            "$ref": "ServiceName"
                        },
                        {
                            "name": "eventName",
                            "description": "A description of the event.",
                            "type": "string"
                        },
                        {
                            "name": "instanceId",
                            "description": "An identifier that groups related events together.",
                            "type": "string"
                        },
                        {
                            "name": "eventMetadata",
                            "description": "A list of event-specific information.",
                            "type": "array",
                            "items": {
                                "$ref": "EventMetadata"
                            }
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "startObserving",
                    "description": "Enables event updates for the service.",
                    "parameters": [
                        {
                            "name": "service",
                            "$ref": "ServiceName"
                        }
                    ]
                },
                {
                    "name": "stopObserving",
                    "description": "Disables event updates for the service.",
                    "parameters": [
                        {
                            "name": "service",
                            "$ref": "ServiceName"
                        }
                    ]
                },
                {
                    "name": "setRecording",
                    "description": "Set the recording state for the service.",
                    "parameters": [
                        {
                            "name": "shouldRecord",
                            "type": "boolean"
                        },
                        {
                            "name": "service",
                            "$ref": "ServiceName"
                        }
                    ]
                },
                {
                    "name": "clearEvents",
                    "description": "Clears all stored data for the service.",
                    "parameters": [
                        {
                            "name": "service",
                            "$ref": "ServiceName"
                        }
                    ]
                }
            ],
            "events": [
                {
                    "name": "recordingStateChanged",
                    "description": "Called when the recording state for the service has been updated.",
                    "parameters": [
                        {
                            "name": "isRecording",
                            "type": "boolean"
                        },
                        {
                            "name": "service",
                            "$ref": "ServiceName"
                        }
                    ]
                },
                {
                    "name": "backgroundServiceEventReceived",
                    "description": "Called with all existing backgroundServiceEvents when enabled, and all new\nevents afterwards if enabled and recording.",
                    "parameters": [
                        {
                            "name": "backgroundServiceEvent",
                            "$ref": "BackgroundServiceEvent"
                        }
                    ]
                }
            ]
        },
        {
            "domain": "Browser",
            "description": "The Browser domain defines methods and events for browser managing.",
            "types": [
                {
                    "id": "BrowserContextID",
                    "experimental": true,
                    "type": "string"
                },
                {
                    "id": "WindowID",
                    "experimental": true,
                    "type": "integer"
                },
                {
                    "id": "WindowState",
                    "description": "The state of the browser window.",
                    "experimental": true,
                    "type": "string",
                    "enum": [
                        "normal",
                        "minimized",
                        "maximized",
                        "fullscreen"
                    ]
                },
                {
                    "id": "Bounds",
                    "description": "Browser window bounds information",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "left",
                            "description": "The offset from the left edge of the screen to the window in pixels.",
                            "optional": true,
                            "type": "integer"
                        },
                        {
                            "name": "top",
                            "description": "The offset from the top edge of the screen to the window in pixels.",
                            "optional": true,
                            "type": "integer"
                        },
                        {
                            "name": "width",
                            "description": "The window width in pixels.",
                            "optional": true,
                            "type": "integer"
                        },
                        {
                            "name": "height",
                            "description": "The window height in pixels.",
                            "optional": true,
                            "type": "integer"
                        },
                        {
                            "name": "windowState",
                            "description": "The window state. Default to normal.",
                            "optional": true,
                            "$ref": "WindowState"
                        }
                    ]
                },
                {
                    "id": "PermissionType",
                    "experimental": true,
                    "type": "string",
                    "enum": [
                        "accessibilityEvents",
                        "audioCapture",
                        "backgroundSync",
                        "backgroundFetch",
                        "clipboardReadWrite",
                        "clipboardSanitizedWrite",
                        "displayCapture",
                        "durableStorage",
                        "flash",
                        "geolocation",
                        "midi",
                        "midiSysex",
                        "nfc",
                        "notifications",
                        "paymentHandler",
                        "periodicBackgroundSync",
                        "protectedMediaIdentifier",
                        "sensors",
                        "videoCapture",
                        "videoCapturePanTiltZoom",
                        "idleDetection",
                        "wakeLockScreen",
                        "wakeLockSystem"
                    ]
                },
                {
                    "id": "PermissionSetting",
                    "experimental": true,
                    "type": "string",
                    "enum": [
                        "granted",
                        "denied"
                    ]
                },
                {
                    "id": "PermissionDescriptor",
                    "description": "Definition of PermissionDescriptor defined in the Permissions API:\nhttps://w3c.github.io/permissions/#dictdef-permissiondescriptor.",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "Name of permission.\nSee https://cs.chromium.org/chromium/src/third_party/blink/renderer/modules/permissions/permission_descriptor.idl for valid permission names.",
                            "type": "string"
                        },
                        {
                            "name": "sysex",
                            "description": "For \"midi\" permission, may also specify sysex control.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "userVisibleOnly",
                            "description": "For \"push\" permission, may specify userVisibleOnly.\nNote that userVisibleOnly = true is the only currently supported type.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "allowWithoutSanitization",
                            "description": "For \"clipboard\" permission, may specify allowWithoutSanitization.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "panTiltZoom",
                            "description": "For \"camera\" permission, may specify panTiltZoom.",
                            "optional": true,
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "id": "BrowserCommandId",
                    "description": "Browser command ids used by executeBrowserCommand.",
                    "experimental": true,
                    "type": "string",
                    "enum": [
                        "openTabSearch",
                        "closeTabSearch"
                    ]
                },
                {
                    "id": "Bucket",
                    "description": "Chrome histogram bucket.",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "low",
                            "description": "Minimum value (inclusive).",
                            "type": "integer"
                        },
                        {
                            "name": "high",
                            "description": "Maximum value (exclusive).",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Number of samples.",
                            "type": "integer"
                        }
                    ]
                },
                {
                    "id": "Histogram",
                    "description": "Chrome histogram.",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "Name.",
                            "type": "string"
                        },
                        {
                            "name": "sum",
                            "description": "Sum of sample values.",
                            "type": "integer"
                        },
                        {
                            "name": "count",
                            "description": "Total number of samples.",
                            "type": "integer"
                        },
                        {
                            "name": "buckets",
                            "description": "Buckets.",
                            "type": "array",
                            "items": {
                                "$ref": "Bucket"
                            }
                        }
                    ]
                }
            ],
            "commands": [
                {
                    "name": "setPermission",
                    "description": "Set permission settings for given origin.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "permission",
                            "description": "Descriptor of permission to override.",
                            "$ref": "PermissionDescriptor"
                        },
                        {
                            "name": "setting",
                            "description": "Setting of the permission.",
                            "$ref": "PermissionSetting"
                        },
                        {
                            "name": "origin",
                            "description": "Origin the permission applies to, all origins if not specified.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "browserContextId",
                            "description": "Context to override. When omitted, default browser context is used.",
                            "optional": true,
                            "$ref": "BrowserContextID"
                        }
                    ]
                },
                {
                    "name": "grantPermissions",
                    "description": "Grant specific permissions to the given origin and reject all others.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "permissions",
                            "type": "array",
                            "items": {
                                "$ref": "PermissionType"
                            }
                        },
                        {
                            "name": "origin",
                            "description": "Origin the permission applies to, all origins if not specified.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "browserContextId",
                            "description": "BrowserContext to override permissions. When omitted, default browser context is used.",
                            "optional": true,
                            "$ref": "BrowserContextID"
                        }
                    ]
                },
                {
                    "name": "resetPermissions",
                    "description": "Reset all permission management for all origins.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "browserContextId",
                            "description": "BrowserContext to reset permissions. When omitted, default browser context is used.",
                            "optional": true,
                            "$ref": "BrowserContextID"
                        }
                    ]
                },
                {
                    "name": "setDownloadBehavior",
                    "description": "Set the behavior when downloading a file.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "behavior",
                            "description": "Whether to allow all or deny all download requests, or use default Chrome behavior if\navailable (otherwise deny). |allowAndName| allows download and names files according to\ntheir dowmload guids.",
                            "type": "string",
                            "enum": [
                                "deny",
                                "allow",
                                "allowAndName",
                                "default"
                            ]
                        },
                        {
                            "name": "browserContextId",
                            "description": "BrowserContext to set download behavior. When omitted, default browser context is used.",
                            "optional": true,
                            "$ref": "BrowserContextID"
                        },
                        {
                            "name": "downloadPath",
                            "description": "The default path to save downloaded files to. This is required if behavior is set to 'allow'\nor 'allowAndName'.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "eventsEnabled",
                            "description": "Whether to emit download events (defaults to false).",
                            "optional": true,
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "name": "cancelDownload",
                    "description": "Cancel a download if in progress",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "guid",
                            "description": "Global unique identifier of the download.",
                            "type": "string"
                        },
                        {
                            "name": "browserContextId",
                            "description": "BrowserContext to perform the action in. When omitted, default browser context is used.",
                            "optional": true,
                            "$ref": "BrowserContextID"
                        }
                    ]
                },
                {
                    "name": "close",
                    "description": "Close browser gracefully."
                },
                {
                    "name": "crash",
                    "description": "Crashes browser on the main thread.",
                    "experimental": true
                },
                {
                    "name": "crashGpuProcess",
                    "description": "Crashes GPU process.",
                    "experimental": true
                },
                {
                    "name": "getVersion",
                    "description": "Returns version information.",
                    "returns": [
                        {
                            "name": "protocolVersion",
                            "description": "Protocol version.",
                            "type": "string"
                        },
                        {
                            "name": "product",
                            "description": "Product name.",
                            "type": "string"
                        },
                        {
                            "name": "revision",
                            "description": "Product revision.",
                            "type": "string"
                        },
                        {
                            "name": "userAgent",
                            "description": "User-Agent.",
                            "type": "string"
                        },
                        {
                            "name": "jsVersion",
                            "description": "V8 version.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "getBrowserCommandLine",
                    "description": "Returns the command line switches for the browser process if, and only if\n--enable-automation is on the commandline.",
                    "experimental": true,
                    "returns": [
                        {
                            "name": "arguments",
                            "description": "Commandline parameters",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    ]
                },
                {
                    "name": "getHistograms",
                    "description": "Get Chrome histograms.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "query",
                            "description": "Requested substring in name. Only histograms which have query as a\nsubstring in their name are extracted. An empty or absent query returns\nall histograms.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "delta",
                            "description": "If true, retrieve delta since last call.",
                            "optional": true,
                            "type": "boolean"
                        }
                    ],
                    "returns": [
                        {
                            "name": "histograms",
                            "description": "Histograms.",
                            "type": "array",
                            "items": {
                                "$ref": "Histogram"
                            }
                        }
                    ]
                },
                {
                    "name": "getHistogram",
                    "description": "Get a Chrome histogram by name.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "name",
                            "description": "Requested histogram name.",
                            "type": "string"
                        },
                        {
                            "name": "delta",
                            "description": "If true, retrieve delta since last call.",
                            "optional": true,
                            "type": "boolean"
                        }
                    ],
                    "returns": [
                        {
                            "name": "histogram",
                            "description": "Histogram.",
                            "$ref": "Histogram"
                        }
                    ]
                },
                {
                    "name": "getWindowBounds",
                    "description": "Get position and size of the browser window.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "windowId",
                            "description": "Browser window id.",
                            "$ref": "WindowID"
                        }
                    ],
                    "returns": [
                        {
                            "name": "bounds",
                            "description": "Bounds information of the window. When window state is 'minimized', the restored window\nposition and size are returned.",
                            "$ref": "Bounds"
                        }
                    ]
                },
                {
                    "name": "getWindowForTarget",
                    "description": "Get the browser window that contains the devtools target.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "targetId",
                            "description": "Devtools agent host id. If called as a part of the session, associated targetId is used.",
                            "optional": true,
                            "$ref": "Target.TargetID"
                        }
                    ],
                    "returns": [
                        {
                            "name": "windowId",
                            "description": "Browser window id.",
                            "$ref": "WindowID"
                        },
                        {
                            "name": "bounds",
                            "description": "Bounds information of the window. When window state is 'minimized', the restored window\nposition and size are returned.",
                            "$ref": "Bounds"
                        }
                    ]
                },
                {
                    "name": "setWindowBounds",
                    "description": "Set position and/or size of the browser window.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "windowId",
                            "description": "Browser window id.",
                            "$ref": "WindowID"
                        },
                        {
                            "name": "bounds",
                            "description": "New window bounds. The 'minimized', 'maximized' and 'fullscreen' states cannot be combined\nwith 'left', 'top', 'width' or 'height'. Leaves unspecified fields unchanged.",
                            "$ref": "Bounds"
                        }
                    ]
                },
                {
                    "name": "setDockTile",
                    "description": "Set dock tile details, platform-specific.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "badgeLabel",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "image",
                            "description": "Png encoded image. (Encoded as a base64 string when passed over JSON)",
                            "optional": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "executeBrowserCommand",
                    "description": "Invoke custom browser commands used by telemetry.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "commandId",
                            "$ref": "BrowserCommandId"
                        }
                    ]
                }
            ],
            "events": [
                {
                    "name": "downloadWillBegin",
                    "description": "Fired when page is about to start a download.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "frameId",
                            "description": "Id of the frame that caused the download to begin.",
                            "$ref": "Page.FrameId"
                        },
                        {
                            "name": "guid",
                            "description": "Global unique identifier of the download.",
                            "type": "string"
                        },
                        {
                            "name": "url",
                            "description": "URL of the resource being downloaded.",
                            "type": "string"
                        },
                        {
                            "name": "suggestedFilename",
                            "description": "Suggested file name of the resource (the actual name of the file saved on disk may differ).",
                            "type": "string"
                        }
                    ]
                },
                {
                    "name": "downloadProgress",
                    "description": "Fired when download makes progress. Last call has |done| == true.",
                    "experimental": true,
                    "parameters": [
                        {
                            "name": "guid",
                            "description": "Global unique identifier of the download.",
                            "type": "string"
                        },
                        {
                            "name": "totalBytes",
                            "description": "Total expected bytes to download.",
                            "type": "number"
                        },
                        {
                            "name": "receivedBytes",
                            "description": "Total bytes received.",
                            "type": "number"
                        },
                        {
                            "name": "state",
                            "description": "Download status.",
                            "type": "string",
                            "enum": [
                                "inProgress",
                                "completed",
                                "canceled"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "domain": "CSS",
            "description": "This domain exposes CSS read/write operations. All CSS objects (stylesheets, rules, and styles)\nhave an associated `id` used in subsequent operations on the related object. Each object type has\na specific `id` structure, and those are not interchangeable between objects of different kinds.\nCSS objects can be loaded using the `get*ForNode()` calls (which accept a DOM node id). A client\ncan also keep track of stylesheets via the `styleSheetAdded`/`styleSheetRemoved` events and\nsubsequently load the required stylesheet contents using the `getStyleSheet[Text]()` methods.",
            "experimental": true,
            "dependencies": [
                "DOM",
                "Page"
            ],
            "types": [
                {
                    "id": "StyleSheetId",
                    "type": "string"
                },
                {
                    "id": "StyleSheetOrigin",
                    "description": "Stylesheet type: \"injected\" for stylesheets injected via extension, \"user-agent\" for user-agent\nstylesheets, \"inspector\" for stylesheets created by the inspector (i.e. those holding the \"via\ninspector\" rules), \"regular\" for regular stylesheets.",
                    "type": "string",
                    "enum": [
                        "injected",
                        "user-agent",
                        "inspector",
                        "regular"
                    ]
                },
                {
                    "id": "PseudoElementMatches",
                    "description": "CSS rule collection for a single pseudo style.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "pseudoType",
                            "description": "Pseudo element type.",
                            "$ref": "DOM.PseudoType"
                        },
                        {
                            "name": "pseudoIdentifier",
                            "description": "Pseudo element custom ident.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "matches",
                            "description": "Matches of CSS rules applicable to the pseudo style.",
                            "type": "array",
                            "items": {
                                "$ref": "RuleMatch"
                            }
                        }
                    ]
                },
                {
                    "id": "InheritedStyleEntry",
                    "description": "Inherited CSS rule collection from ancestor node.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "inlineStyle",
                            "description": "The ancestor node's inline style, if any, in the style inheritance chain.",
                            "optional": true,
                            "$ref": "CSSStyle"
                        },
                        {
                            "name": "matchedCSSRules",
                            "description": "Matches of CSS rules matching the ancestor node in the style inheritance chain.",
                            "type": "array",
                            "items": {
                                "$ref": "RuleMatch"
                            }
                        }
                    ]
                },
                {
                    "id": "InheritedPseudoElementMatches",
                    "description": "Inherited pseudo element matches from pseudos of an ancestor node.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "pseudoElements",
                            "description": "Matches of pseudo styles from the pseudos of an ancestor node.",
                            "type": "array",
                            "items": {
                                "$ref": "PseudoElementMatches"
                            }
                        }
                    ]
                },
                {
                    "id": "RuleMatch",
                    "description": "Match data for a CSS rule.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "rule",
                            "description": "CSS rule in the match.",
                            "$ref": "CSSRule"
                        },
                        {
                            "name": "matchingSelectors",
                            "description": "Matching selector indices in the rule's selectorList selectors (0-based).",
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    ]
                },
                {
                    "id": "Value",
                    "description": "Data for a simple selector (these are delimited by commas in a selector list).",
                    "type": "object",
                    "properties": [
                        {
                            "name": "text",
                            "description": "Value text.",
                            "type": "string"
                        },
                        {
                            "name": "range",
                            "description": "Value range in the underlying resource (if available).",
                            "optional": true,
                            "$ref": "SourceRange"
                        }
                    ]
                },
                {
                    "id": "SelectorList",
                    "description": "Selector list data.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "selectors",
                            "description": "Selectors in the list.",
                            "type": "array",
                            "items": {
                                "$ref": "Value"
                            }
                        },
                        {
                            "name": "text",
                            "description": "Rule selector text.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "CSSStyleSheetHeader",
                    "description": "CSS stylesheet metainformation.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "styleSheetId",
                            "description": "The stylesheet identifier.",
                            "$ref": "StyleSheetId"
                        },
                        {
                            "name": "frameId",
                            "description": "Owner frame identifier.",
                            "$ref": "Page.FrameId"
                        },
                        {
                            "name": "sourceURL",
                            "description": "Stylesheet resource URL. Empty if this is a constructed stylesheet created using\nnew CSSStyleSheet() (but non-empty if this is a constructed sylesheet imported\nas a CSS module script).",
                            "type": "string"
                        },
                        {
                            "name": "sourceMapURL",
                            "description": "URL of source map associated with the stylesheet (if any).",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "origin",
                            "description": "Stylesheet origin.",
                            "$ref": "StyleSheetOrigin"
                        },
                        {
                            "name": "title",
                            "description": "Stylesheet title.",
                            "type": "string"
                        },
                        {
                            "name": "ownerNode",
                            "description": "The backend id for the owner node of the stylesheet.",
                            "optional": true,
                            "$ref": "DOM.BackendNodeId"
                        },
                        {
                            "name": "disabled",
                            "description": "Denotes whether the stylesheet is disabled.",
                            "type": "boolean"
                        },
                        {
                            "name": "hasSourceURL",
                            "description": "Whether the sourceURL field value comes from the sourceURL comment.",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "isInline",
                            "description": "Whether this stylesheet is created for STYLE tag by parser. This flag is not set for\ndocument.written STYLE tags.",
                            "type": "boolean"
                        },
                        {
                            "name": "isMutable",
                            "description": "Whether this stylesheet is mutable. Inline stylesheets become mutable\nafter they have been modified via CSSOM API.\n<link> element's stylesheets become mutable only if DevTools modifies them.\nConstructed stylesheets (new CSSStyleSheet()) are mutable immediately after creation.",
                            "type": "boolean"
                        },
                        {
                            "name": "isConstructed",
                            "description": "True if this stylesheet is created through new CSSStyleSheet() or imported as a\nCSS module script.",
                            "type": "boolean"
                        },
                        {
                            "name": "startLine",
                            "description": "Line offset of the stylesheet within the resource (zero based).",
                            "type": "number"
                        },
                        {
                            "name": "startColumn",
                            "description": "Column offset of the stylesheet within the resource (zero based).",
                            "type": "number"
                        },
                        {
                            "name": "length",
                            "description": "Size of the content (in characters).",
                            "type": "number"
                        },
                        {
                            "name": "endLine",
                            "description": "Line offset of the end of the stylesheet within the resource (zero based).",
                            "type": "number"
                        },
                        {
                            "name": "endColumn",
                            "description": "Column offset of the end of the stylesheet within the resource (zero based).",
                            "type": "number"
                        }
                    ]
                },
                {
                    "id": "CSSRule",
                    "description": "CSS rule representation.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "styleSheetId",
                            "description": "The css style sheet identifier (absent for user agent stylesheet and user-specified\nstylesheet rules) this rule came from.",
                            "optional": true,
                            "$ref": "StyleSheetId"
                        },
                        {
                            "name": "selectorList",
                            "description": "Rule selector data.",
                            "$ref": "SelectorList"
                        },
                        {
                            "name": "origin",
                            "description": "Parent stylesheet's origin.",
                            "$ref": "StyleSheetOrigin"
                        },
                        {
                            "name": "style",
                            "description": "Associated style declaration.",
                            "$ref": "CSSStyle"
                        },
                        {
                            "name": "media",
                            "description": "Media list array (for rules involving media queries). The array enumerates media queries\nstarting with the innermost one, going outwards.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "CSSMedia"
                            }
                        },
                        {
                            "name": "containerQueries",
                            "description": "Container query list array (for rules involving container queries).\nThe array enumerates container queries starting with the innermost one, going outwards.",
                            "experimental": true,
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "CSSContainerQuery"
                            }
                        },
                        {
                            "name": "supports",
                            "description": "@supports CSS at-rule array.\nThe array enumerates @supports at-rules starting with the innermost one, going outwards.",
                            "experimental": true,
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "CSSSupports"
                            }
                        },
                        {
                            "name": "layers",
                            "description": "Cascade layer array. Contains the layer hierarchy that this rule belongs to starting\nwith the innermost layer and going outwards.",
                            "experimental": true,
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "CSSLayer"
                            }
                        },
                        {
                            "name": "scopes",
                            "description": "@scope CSS at-rule array.\nThe array enumerates @scope at-rules starting with the innermost one, going outwards.",
                            "experimental": true,
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "CSSScope"
                            }
                        }
                    ]
                },
                {
                    "id": "RuleUsage",
                    "description": "CSS coverage information.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "styleSheetId",
                            "description": "The css style sheet identifier (absent for user agent stylesheet and user-specified\nstylesheet rules) this rule came from.",
                            "$ref": "StyleSheetId"
                        },
                        {
                            "name": "startOffset",
                            "description": "Offset of the start of the rule (including selector) from the beginning of the stylesheet.",
                            "type": "number"
                        },
                        {
                            "name": "endOffset",
                            "description": "Offset of the end of the rule body from the beginning of the stylesheet.",
                            "type": "number"
                        },
                        {
                            "name": "used",
                            "description": "Indicates whether the rule was actually used by some element in the page.",
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "id": "SourceRange",
                    "description": "Text range within a resource. All numbers are zero-based.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "startLine",
                            "description": "Start line of range.",
                            "type": "integer"
                        },
                        {
                            "name": "startColumn",
                            "description": "Start column of range (inclusive).",
                            "type": "integer"
                        },
                        {
                            "name": "endLine",
                            "description": "End line of range",
                            "type": "integer"
                        },
                        {
                            "name": "endColumn",
                            "description": "End column of range (exclusive).",
                            "type": "integer"
                        }
                    ]
                },
                {
                    "id": "ShorthandEntry",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "Shorthand name.",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "description": "Shorthand value.",
                            "type": "string"
                        },
                        {
                            "name": "important",
                            "description": "Whether the property has \"!important\" annotation (implies `false` if absent).",
                            "optional": true,
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "id": "CSSComputedStyleProperty",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "Computed style property name.",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "description": "Computed style property value.",
                            "type": "string"
                        }
                    ]
                },
                {
                    "id": "CSSStyle",
                    "description": "CSS style representation.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "styleSheetId",
                            "description": "The css style sheet identifier (absent for user agent stylesheet and user-specified\nstylesheet rules) this rule came from.",
                            "optional": true,
                            "$ref": "StyleSheetId"
                        },
                        {
                            "name": "cssProperties",
                            "description": "CSS properties in the style.",
                            "type": "array",
                            "items": {
                                "$ref": "CSSProperty"
                            }
                        },
                        {
                            "name": "shorthandEntries",
                            "description": "Computed values for all shorthands found in the style.",
                            "type": "array",
                            "items": {
                                "$ref": "ShorthandEntry"
                            }
                        },
                        {
                            "name": "cssText",
                            "description": "Style declaration text (if available).",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "range",
                            "description": "Style declaration range in the enclosing stylesheet (if available).",
                            "optional": true,
                            "$ref": "SourceRange"
                        }
                    ]
                },
                {
                    "id": "CSSProperty",
                    "description": "CSS property declaration data.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "name",
                            "description": "The property name.",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "description": "The property value.",
                            "type": "string"
                        },
                        {
                            "name": "important",
                            "description": "Whether the property has \"!important\" annotation (implies `false` if absent).",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "implicit",
                            "description": "Whether the property is implicit (implies `false` if absent).",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "text",
                            "description": "The full property text as specified in the style.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "parsedOk",
                            "description": "Whether the property is understood by the browser (implies `true` if absent).",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "disabled",
                            "description": "Whether the property is disabled by the user (present for source-based properties only).",
                            "optional": true,
                            "type": "boolean"
                        },
                        {
                            "name": "range",
                            "description": "The entire property range in the enclosing style declaration (if available).",
                            "optional": true,
                            "$ref": "SourceRange"
                        },
                        {
                            "name": "longhandProperties",
                            "description": "Parsed longhand components of this property if it is a shorthand.\nThis field will be empty if the given property is not a shorthand.",
                            "experimental": true,
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "CSSProperty"
                            }
                        }
                    ]
                },
                {
                    "id": "CSSMedia",
                    "description": "CSS media rule descriptor.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "text",
                            "description": "Media query text.",
                            "type": "string"
                        },
                        {
                            "name": "source",
                            "description": "Source of the media query: \"mediaRule\" if specified by a @media rule, \"importRule\" if\nspecified by an @import rule, \"linkedSheet\" if specified by a \"media\" attribute in a linked\nstylesheet's LINK tag, \"inlineSheet\" if specified by a \"media\" attribute in an inline\nstylesheet's STYLE tag.",
                            "type": "string",
                            "enum": [
                                "mediaRule",
                                "importRule",
                                "linkedSheet",
                                "inlineSheet"
                            ]
                        },
                        {
                            "name": "sourceURL",
                            "description": "URL of the document containing the media query description.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "range",
                            "description": "The associated rule (@media or @import) header range in the enclosing stylesheet (if\navailable).",
                            "optional": true,
                            "$ref": "SourceRange"
                        },
                        {
                            "name": "styleSheetId",
                            "description": "Identifier of the stylesheet containing this object (if exists).",
                            "optional": true,
                            "$ref": "StyleSheetId"
                        },
                        {
                            "name": "mediaList",
                            "description": "Array of media queries.",
                            "optional": true,
                            "type": "array",
                            "items": {
                                "$ref": "MediaQuery"
                            }
                        }
                    ]
                },
                {
                    "id": "MediaQuery",
                    "description": "Media query descriptor.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "expressions",
                            "description": "Array of media query expressions.",
                            "type": "array",
                            "items": {
                                "$ref": "MediaQueryExpression"
                            }
                        },
                        {
                            "name": "active",
                            "description": "Whether the media query condition is satisfied.",
                            "type": "boolean"
                        }
                    ]
                },
                {
                    "id": "MediaQueryExpression",
                    "description": "Media query expression descriptor.",
                    "type": "object",
                    "properties": [
                        {
                            "name": "value",
                            "description": "Media query expression value.",
                            "type": "number"
                        },
                        {
                            "name": "unit",
                            "description": "Media query expression units.",
                            "type": "string"
                        },
                        {
                            "name": "feature",
                            "description": "Media query expression feature.",
                            "type": "string"
                        },
                        {
                            "name": "valueRange",
                            "description": "The associated range of the value text in the enclosing stylesheet (if available).",
                            "optional": true,
                            "$ref": "SourceRange"
                        },
                        {
                            "name": "computedLength",
                            "description": "Computed length of media query expression (if applicable).",
                            "optional": true,
                            "type": "number"
                        }
                    ]
                },
                {
                    "id": "CSSContainerQuery",
                    "description": "CSS container query rule descriptor.",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "text",
                            "description": "Container query text.",
                            "type": "string"
                        },
                        {
                            "name": "range",
                            "description": "The associated rule header range in the enclosing stylesheet (if\navailable).",
                            "optional": true,
                            "$ref": "SourceRange"
                        },
                        {
                            "name": "styleSheetId",
                            "description": "Identifier of the stylesheet containing this object (if exists).",
                            "optional": true,
                            "$ref": "StyleSheetId"
                        },
                        {
                            "name": "name",
                            "description": "Optional name for the container.",
                            "optional": true,
                            "type": "string"
                        },
                        {
                            "name": "physicalAxes",
                            "description": "Optional physical axes queried for the container.",
                            "optional": true,
                            "$ref": "DOM.PhysicalAxes"
                        },
                        {
                            "name": "logicalAxes",
                            "description": "Optional logical axes queried for the container.",
                            "optional": true,
                            "$ref": "DOM.LogicalAxes"
                        }
                    ]
                },
                {
                    "id": "CSSSupports",
                    "description": "CSS Supports at-rule descriptor.",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "text",
                            "description": "Supports rule text.",
                            "type": "string"
                        },
                        {
                            "name": "active",
                            "description": "Whether the supports condition is satisfied.",
                            "type": "boolean"
                        },
                        {
                            "name": "range",
                            "description": "The associated rule header range in the enclosing stylesheet (if\navailable).",
                            "optional": true,
                            "$ref": "SourceRange"
                        },
                        {
                            "name": "styleSheetId",
                            "description": "Identifier of the stylesheet containing this object (if exists).",
                            "optional": true,
                            "$ref": "StyleSheetId"
                        }
                    ]
                },
                {
                    "id": "CSSScope",
                    "description": "CSS Scope at-rule descriptor.",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "text",
                            "description": "Scope rule text.",
                            "type": "string"
                        },
                        {
                            "name": "range",
                            "description": "The associated rule header range in the enclosing stylesheet (if\navailable).",
                            "optional": true,
                            "$ref": "SourceRange"
                        },
                        {
                            "name": "styleSheetId",
                            "description": "Identifier of the stylesheet containing this object (if exists).",
                            "optional": true,
                            "$ref": "StyleSheetId"
                        }
                    ]
                },
                {
                    "id": "CSSLayer",
                    "description": "CSS Layer at-rule descriptor.",
                    "experimental": true,
                    "type": "object",
                    "properties": [
                        {
                            "name": "text",
                            "description": "Layer 